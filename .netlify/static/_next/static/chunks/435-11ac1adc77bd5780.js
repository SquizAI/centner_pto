"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[435],{3998:(e,n,t)=>{t.d(n,{$:()=>d,r:()=>c});var r=t(95155),a=t(12115),o=t(32467),i=t(83101),s=t(64269);let c=(0,i.F)("inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",{variants:{variant:{default:"bg-primary text-primary-foreground shadow hover:bg-primary/90",destructive:"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90",outline:"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground",secondary:"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80",ghost:"hover:bg-accent hover:text-accent-foreground",link:"text-primary underline-offset-4 hover:underline"},size:{default:"h-9 px-4 py-2",sm:"h-8 rounded-md px-3 text-xs",lg:"h-10 rounded-md px-8",icon:"h-9 w-9"}},defaultVariants:{variant:"default",size:"default"}}),d=a.forwardRef((e,n)=>{let{className:t,variant:a,size:i,asChild:d=!1,...l}=e,u=d?o.DX:"button";return(0,r.jsx)(u,{className:(0,s.cn)(c({variant:a,size:i,className:t})),ref:n,...l})});d.displayName="Button"},17740:(e,n,t)=>{t.d(n,{CartProvider:()=>d,_:()=>l});var r=t(95155),a=t(12115),o=t(31036),i=t(18720);let s=(0,a.createContext)(void 0),c="shopify_cart_id";function d(e){let{children:n}=e,[t,d]=(0,a.useState)(null),[l,u]=(0,a.useState)(!0);(0,a.useEffect)(()=>{h()},[]);let h=async()=>{try{if(u(!0),!o.UO.isConfigured())return void console.log("Shopify not configured, skipping cart initialization");let e=localStorage.getItem(c);if(e){let n=await o.UO.getCart(e);n?d(n):await g()}else await g()}catch(e){console.error("Error initializing cart:",e),o.UO.isConfigured()&&i.o.error("Failed to initialize cart")}finally{u(!1)}},g=async()=>{try{let e=await o.UO.createCart();d(e),localStorage.setItem(c,e.id)}catch(e){throw console.error("Error creating cart:",e),e}},m=async function(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;try{u(!0);let r=null==t?void 0:t.id;if(r||(await g(),r=null==t?void 0:t.id),!r)throw Error("Failed to create cart");let a=await o.UO.addToCart(r,e,n);d(a),i.o.success("Added to cart")}catch(e){throw console.error("Error adding to cart:",e),i.o.error("Failed to add item to cart"),e}finally{u(!1)}},p=async e=>{if(null==t?void 0:t.id)try{u(!0);let n=await o.UO.removeFromCart(t.id,e);d(n),i.o.success("Removed from cart")}catch(e){throw console.error("Error removing from cart:",e),i.o.error("Failed to remove item from cart"),e}finally{u(!1)}},f=async(e,n)=>{if(null==t?void 0:t.id)try{if(u(!0),n<=0)return void await p(e);let r=await o.UO.updateCartLine(t.id,e,n);d(r)}catch(e){throw console.error("Error updating quantity:",e),i.o.error("Failed to update quantity"),e}finally{u(!1)}},v=async()=>{try{u(!0),await g(),i.o.success("Cart cleared")}catch(e){throw console.error("Error clearing cart:",e),i.o.error("Failed to clear cart"),e}finally{u(!1)}},y=async()=>{if(null==t?void 0:t.id)try{let e=await o.UO.getCart(t.id);e&&d(e)}catch(e){console.error("Error refreshing cart:",e)}},C=(null==t?void 0:t.itemCount)||0;return(0,r.jsx)(s.Provider,{value:{cart:t,isLoading:l,itemCount:C,addToCart:m,removeFromCart:p,updateQuantity:f,clearCart:v,refreshCart:y},children:n})}function l(){let e=(0,a.useContext)(s);if(void 0===e)throw Error("useCart must be used within a CartProvider");return e}},31036:(e,n,t)=>{t.d(n,{$g:()=>s,T2:()=>c,UO:()=>i,uA:()=>d});let r="\n  fragment ProductFragment on Product {\n    id\n    title\n    handle\n    description\n    descriptionHtml\n    availableForSale\n    productType\n    vendor\n    tags\n    priceRange {\n      minVariantPrice {\n        amount\n        currencyCode\n      }\n      maxVariantPrice {\n        amount\n        currencyCode\n      }\n    }\n    images(first: 10) {\n      edges {\n        node {\n          id\n          url\n          altText\n          width\n          height\n        }\n      }\n    }\n    variants(first: 50) {\n      edges {\n        node {\n          id\n          title\n          availableForSale\n          quantityAvailable\n          price {\n            amount\n            currencyCode\n          }\n          compareAtPrice {\n            amount\n            currencyCode\n          }\n          selectedOptions {\n            name\n            value\n          }\n          image {\n            id\n            url\n            altText\n            width\n            height\n          }\n        }\n      }\n    }\n    collections(first: 10) {\n      edges {\n        node {\n          id\n          title\n          handle\n        }\n      }\n    }\n  }\n",a="\n  fragment CartFragment on Cart {\n    id\n    checkoutUrl\n    lines(first: 50) {\n      edges {\n        node {\n          id\n          quantity\n          merchandise {\n            ... on ProductVariant {\n              id\n              title\n              product {\n                id\n                title\n                handle\n                images(first: 1) {\n                  edges {\n                    node {\n                      url\n                      altText\n                    }\n                  }\n                }\n              }\n              selectedOptions {\n                name\n                value\n              }\n              price {\n                amount\n                currencyCode\n              }\n            }\n          }\n          cost {\n            totalAmount {\n              amount\n              currencyCode\n            }\n          }\n        }\n      }\n    }\n    cost {\n      subtotalAmount {\n        amount\n        currencyCode\n      }\n      totalAmount {\n        amount\n        currencyCode\n      }\n      totalTaxAmount {\n        amount\n        currencyCode\n      }\n    }\n    estimatedCost {\n      totalAmount {\n        amount\n        currencyCode\n      }\n    }\n  }\n";class o{isConfigured(){return!!(this.domain&&this.storefrontAccessToken)}async graphqlRequest(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this.domain||!this.storefrontAccessToken)throw Error("Shopify client not configured. Please set environment variables.");let t="https://".concat(this.domain,"/api/").concat(this.apiVersion,"/graphql.json"),r=await fetch(t,{method:"POST",headers:{"Content-Type":"application/json","X-Shopify-Storefront-Access-Token":this.storefrontAccessToken},body:JSON.stringify({query:e,variables:n}),next:{revalidate:60}});if(!r.ok)throw Error("Shopify API error: ".concat(r.statusText));let a=await r.json();if(a.errors)throw Error("GraphQL errors: ".concat(JSON.stringify(a.errors)));return a.data}async getAllProducts(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:20,n=arguments.length>1?arguments[1]:void 0,t=await this.graphqlRequest("\n      query GetProducts($first: Int!, $after: String) {\n        products(first: $first, after: $after, sortKey: CREATED_AT, reverse: true) {\n          edges {\n            node {\n              ...ProductFragment\n            }\n            cursor\n          }\n          pageInfo {\n            hasNextPage\n            endCursor\n          }\n        }\n      }\n      ".concat(r,"\n    "),{first:e,after:n});return{products:t.products.edges.map(e=>this.normalizeProduct(e.node)),hasNextPage:t.products.pageInfo.hasNextPage,endCursor:t.products.pageInfo.endCursor}}async getProductByHandle(e){let n=await this.graphqlRequest("\n      query GetProductByHandle($handle: String!) {\n        product(handle: $handle) {\n          ...ProductFragment\n        }\n      }\n      ".concat(r,"\n    "),{handle:e});return n.product?this.normalizeProduct(n.product):null}async getProductById(e){let n=await this.graphqlRequest("\n      query GetProductById($id: ID!) {\n        product(id: $id) {\n          ...ProductFragment\n        }\n      }\n      ".concat(r,"\n    "),{id:e});return n.product?this.normalizeProduct(n.product):null}async getProductsByCollection(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,t=await this.graphqlRequest("\n      query GetProductsByCollection($handle: String!, $first: Int!) {\n        collection(handle: $handle) {\n          products(first: $first) {\n            edges {\n              node {\n                ...ProductFragment\n              }\n            }\n          }\n        }\n      }\n      ".concat(r,"\n    "),{handle:e,first:n});return t.collection?t.collection.products.edges.map(e=>this.normalizeProduct(e.node)):[]}async getAllCollections(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:20;return(await this.graphqlRequest("\n      query GetCollections($first: Int!) {\n        collections(first: $first) {\n          edges {\n            node {\n              id\n              title\n              handle\n              description\n            }\n          }\n        }\n      }\n    ",{first:e})).collections.edges.map(e=>e.node)}async searchProducts(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20;return(await this.graphqlRequest("\n      query SearchProducts($query: String!, $first: Int!) {\n        products(first: $first, query: $query) {\n          edges {\n            node {\n              ...ProductFragment\n            }\n          }\n        }\n      }\n      ".concat(r,"\n    "),{query:e,first:n})).products.edges.map(e=>this.normalizeProduct(e.node))}async createCart(){var e;let n=await this.graphqlRequest("\n      mutation CreateCart {\n        cartCreate {\n          cart {\n            ...CartFragment\n          }\n          userErrors {\n            field\n            message\n          }\n        }\n      }\n      ".concat(a,"\n    "));if((null==(e=n.cartCreate.userErrors)?void 0:e.length)>0)throw Error(n.cartCreate.userErrors[0].message);return this.normalizeCart(n.cartCreate.cart)}async getCart(e){try{let n=await this.graphqlRequest("\n      query GetCart($id: ID!) {\n        cart(id: $id) {\n          ...CartFragment\n        }\n      }\n      ".concat(a,"\n    "),{id:e});return n.cart?this.normalizeCart(n.cart):null}catch(e){return console.error("Error fetching cart:",e),null}}async addToCart(e,n){var t;let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=await this.graphqlRequest("\n      mutation AddToCart($cartId: ID!, $lines: [CartLineInput!]!) {\n        cartLinesAdd(cartId: $cartId, lines: $lines) {\n          cart {\n            ...CartFragment\n          }\n          userErrors {\n            field\n            message\n          }\n        }\n      }\n      ".concat(a,"\n    "),{cartId:e,lines:[{merchandiseId:n,quantity:r}]});if((null==(t=o.cartLinesAdd.userErrors)?void 0:t.length)>0)throw Error(o.cartLinesAdd.userErrors[0].message);return this.normalizeCart(o.cartLinesAdd.cart)}async updateCartLine(e,n,t){var r;let o=await this.graphqlRequest("\n      mutation UpdateCartLine($cartId: ID!, $lines: [CartLineUpdateInput!]!) {\n        cartLinesUpdate(cartId: $cartId, lines: $lines) {\n          cart {\n            ...CartFragment\n          }\n          userErrors {\n            field\n            message\n          }\n        }\n      }\n      ".concat(a,"\n    "),{cartId:e,lines:[{id:n,quantity:t}]});if((null==(r=o.cartLinesUpdate.userErrors)?void 0:r.length)>0)throw Error(o.cartLinesUpdate.userErrors[0].message);return this.normalizeCart(o.cartLinesUpdate.cart)}async removeFromCart(e,n){var t;let r=await this.graphqlRequest("\n      mutation RemoveFromCart($cartId: ID!, $lineIds: [ID!]!) {\n        cartLinesRemove(cartId: $cartId, lineIds: $lineIds) {\n          cart {\n            ...CartFragment\n          }\n          userErrors {\n            field\n            message\n          }\n        }\n      }\n      ".concat(a,"\n    "),{cartId:e,lineIds:[n]});if((null==(t=r.cartLinesRemove.userErrors)?void 0:t.length)>0)throw Error(r.cartLinesRemove.userErrors[0].message);return this.normalizeCart(r.cartLinesRemove.cart)}normalizeProduct(e){var n,t;let r=null==(n=e.variants.edges[0])?void 0:n.node,a=e.images.edges.map(e=>e.node.url);return{id:e.id,title:e.title,handle:e.handle,description:e.description,price:(null==r?void 0:r.price.amount)||"0",compareAtPrice:null==r||null==(t=r.compareAtPrice)?void 0:t.amount,image:a[0]||"/placeholder-product.png",images:a,availableForSale:e.availableForSale,productType:e.productType,vendor:e.vendor,tags:e.tags,variants:e.variants.edges.map(e=>{var n,t;return{id:e.node.id,title:e.node.title,price:e.node.price.amount,compareAtPrice:null==(n=e.node.compareAtPrice)?void 0:n.amount,availableForSale:e.node.availableForSale,quantityAvailable:e.node.quantityAvailable||0,options:e.node.selectedOptions,image:null==(t=e.node.image)?void 0:t.url}}),collections:e.collections.edges.map(e=>e.node)}}normalizeCart(e){let n=e.lines.edges.map(e=>{var n;let t=e.node,r=t.merchandise.product;return{id:t.id,variantId:t.merchandise.id,productId:r.id,productTitle:r.title,productHandle:r.handle,variantTitle:t.merchandise.title,quantity:t.quantity,price:t.merchandise.price.amount,image:(null==(n=r.images.edges[0])?void 0:n.node.url)||"/placeholder-product.png",options:t.merchandise.selectedOptions,subtotal:t.cost.totalAmount.amount}});return{id:e.id,checkoutUrl:e.checkoutUrl,items:n,itemCount:n.reduce((e,n)=>e+n.quantity,0),subtotal:e.cost.subtotalAmount.amount,total:e.cost.totalAmount.amount}}constructor(){this.apiVersion="2024-10",this.domain="",this.storefrontAccessToken="",this.domain&&this.storefrontAccessToken||console.warn("Shopify credentials not configured. Store features will not work.")}}let i=new o;function s(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"USD",t="string"==typeof e?parseFloat(e):e;return new Intl.NumberFormat("en-US",{style:"currency",currency:n}).format(t)}function c(e,n){return!!n&&parseFloat(n)>parseFloat(e)}function d(e,n){return n?Math.round((parseFloat(n)-parseFloat(e))/parseFloat(n)*100):0}},64269:(e,n,t)=>{t.d(n,{cn:()=>o});var r=t(2821),a=t(75889);function o(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];return(0,a.QP)((0,r.$)(n))}}}]);